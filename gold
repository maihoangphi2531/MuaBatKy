-- Danh sách người bán
local shopData = {
    {seller = "pandabois54"},
    {seller = "StevensElijah33"},
    {seller = "lalaa13123"},
    {seller = "lalaa1756"},
}

-- Tên món đồ cần mua và giá ưu tiên
local itemName = "DeconstructionStone"
local priorityPrice = 99999999 -- Giá ưu tiên

-- Thời gian chờ giữa các lần lặp (giây)
local delayBetweenLoops = 0.01

-- Hàm thực hiện mua tất cả các món DeconstructionStone
local function buyItemsFromShop(shopOwnerName)
    -- Tìm folder shop của chủ shop trong ReplicatedStorage
    local playerShops = game:GetService("ReplicatedStorage"):WaitForChild("PlayerShops")
    local shopFolder = playerShops:FindFirstChild(shopOwnerName)
    if not shopFolder then
        warn("Không tìm thấy shop của:", shopOwnerName)
        return false
    end

    -- Truy cập folder SellShop và Items
    local sellShopFolder = shopFolder:FindFirstChild("SellShop")
    if not sellShopFolder then
        warn("Không tìm thấy SellShop trong shop của:", shopOwnerName)
        return false
    end

    local itemsFolder = sellShopFolder:FindFirstChild("Items")
    if not itemsFolder then
        warn("Không tìm thấy folder Items trong SellShop của:", shopOwnerName)
        return false
    end

    -- Phân loại các món dựa trên giá
    local priorityItems = {}
    local otherItems = {}

    for _, stone in pairs(itemsFolder:GetChildren()) do
        if stone.Name == itemName then
            local askingPrice = stone:FindFirstChild("AskingPrice")
            if askingPrice and askingPrice:IsA("IntValue") then
                if askingPrice.Value == priorityPrice then
                    table.insert(priorityItems, stone) -- Món ưu tiên
                else
                    table.insert(otherItems, stone) -- Món khác
                end
            end
        end
    end

    -- Hàm mua từng món
    local function buyStone(stone)
        local shopOwner = game:GetService("Players"):FindFirstChild(shopOwnerName)
        if not shopOwner then
            warn("Không tìm thấy player có tên:", shopOwnerName)
            return false
        end

        local success, errorMessage = pcall(function()
            game:GetService("ReplicatedStorage")
                :WaitForChild("Shared")
                :WaitForChild("Shop")
                :WaitForChild("Buy")
                :InvokeServer(shopOwner, stone)
        end)

        if success then
            print("Mua thành công DeconstructionStone từ shop của:", shopOwnerName, "với giá:", stone:FindFirstChild("AskingPrice").Value)
            return true
        else
            warn("Gặp lỗi khi mua từ shop của:", shopOwnerName, "- Lỗi:", errorMessage)
            return false
        end
    end

    -- Mua các món ưu tiên trước
    local stonesBought = 0
    for _, stone in ipairs(priorityItems) do
        if buyStone(stone) then
            stonesBought = stonesBought + 1
        end
    end

    -- Mua các món khác sau
    for _, stone in ipairs(otherItems) do
        if buyStone(stone) then
            stonesBought = stonesBought + 1
        end
    end

    if stonesBought == 0 then
        warn("Không tìm thấy DeconstructionStone nào trong shop của:", shopOwnerName)
        return false
    else
        print("Đã mua thành công", stonesBought, "DeconstructionStone từ shop của:", shopOwnerName)
        return true
    end
end

-- Vòng lặp chạy liên tục
while true do
    for _, shop in ipairs(shopData) do
        print("Đang kiểm tra shop của:", shop.seller)
        local success = buyItemsFromShop(shop.seller)
        if success then
            print("Hoàn tất mua từ shop:", shop.seller)
        else
            print("Không thể mua từ shop:", shop.seller)
        end
    end

    -- Chờ trước khi lặp lại
    print("Chờ " .. delayBetweenLoops .. " giây trước khi kiểm tra lại...")
    task.wait(delayBetweenLoops)
end
